[
    {
        "id": "abb42e8385d58ff0",
        "type": "tab",
        "label": "History",
        "disabled": false,
        "locked": true,
        "info": "",
        "env": []
    },
    {
        "id": "7a07cae8132c3b0c",
        "type": "group",
        "z": "abb42e8385d58ff0",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c6f435bac2088583",
            "7a35168cd9af964d",
            "fda5359f6d0c59a0",
            "80c53d659ed47f41",
            "e8abf4942ee5fc54",
            "b648e25828861eeb"
        ],
        "x": 14,
        "y": 59,
        "w": 1072,
        "h": 122
    },
    {
        "id": "c8ccef992a04e384",
        "type": "group",
        "z": "abb42e8385d58ff0",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "2303b9837118c1f0",
            "561ea5b79df20677",
            "e18881b9d8bd4e2e",
            "9602f897bd2c179e",
            "a22e0e6340938efd",
            "104dfd424dd5b2b9"
        ],
        "x": 14,
        "y": 199,
        "w": 1072,
        "h": 122
    },
    {
        "id": "c6f435bac2088583",
        "type": "inject",
        "z": "abb42e8385d58ff0",
        "g": "7a07cae8132c3b0c",
        "name": "Inject and update every 10 minutes",
        "props": [],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "7a35168cd9af964d"
            ]
        ]
    },
    {
        "id": "7a35168cd9af964d",
        "type": "http request",
        "z": "abb42e8385d58ff0",
        "g": "7a07cae8132c3b0c",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://thingspeak.com/channels/2624543/feeds.csv?api_keys=YA3LFQ0FBOO1RHIW",
        "tls": "",
        "persist": true,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 470,
        "y": 140,
        "wires": [
            [
                "fda5359f6d0c59a0"
            ]
        ]
    },
    {
        "id": "fda5359f6d0c59a0",
        "type": "json",
        "z": "abb42e8385d58ff0",
        "g": "7a07cae8132c3b0c",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 630,
        "y": 140,
        "wires": [
            [
                "80c53d659ed47f41"
            ]
        ]
    },
    {
        "id": "80c53d659ed47f41",
        "type": "function",
        "z": "abb42e8385d58ff0",
        "g": "7a07cae8132c3b0c",
        "name": "Parse string to array",
        "func": "function parseAndSortData(input) {\n    const result = [];\n    const lines = input.trim().split('\\n');\n\n    lines.forEach(line => {\n        if (!line) return;\n\n        const parts = line.split(',');\n        if (parts.length < 4) return; \n\n        const dateTime = parts[0].split(' ');\n        if (dateTime.length < 2) return;\n\n        let date = dateTime[0];\n        let time = dateTime[1];\n        const temp = parseFloat(parts[2]);\n        const pH = parseFloat(parts[3]);\n\n        let [year, month, day] = date.split('-').map(Number);\n        let [hours, minutes, seconds] = time.split(':').map(Number);\n        let currentDate = new Date(year, month - 1, day, hours, minutes, seconds);\n\n        let initialDate = currentDate.getDate();\n\n        currentDate.setHours(currentDate.getHours() + 7);\n\n        if (currentDate.getDate() !== initialDate) {\n            year = currentDate.getFullYear();\n            month = currentDate.getMonth() + 1; \n            day = currentDate.getDate();\n        }\n\n        let adjustedDate = `${year.toString().padStart(4, '0')}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n        let adjustedTime = currentDate.toTimeString().split(' ')[0];\n\n        result.push({date: adjustedDate, time: adjustedTime, temp, pH});\n    });\n\n    result.sort((a, b) => {\n        const dateA = new Date(`${a.date}T${a.time}`).getTime();\n        const dateB = new Date(`${b.date}T${b.time}`).getTime();\n        return dateB - dateA;\n    });\n    return result;\n}\n\nmsg.payload = parseAndSortData(msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 140,
        "wires": [
            [
                "b648e25828861eeb"
            ]
        ]
    },
    {
        "id": "e8abf4942ee5fc54",
        "type": "comment",
        "z": "abb42e8385d58ff0",
        "g": "7a07cae8132c3b0c",
        "name": "Sensor's Data from thingspeak",
        "info": "",
        "x": 190,
        "y": 100,
        "wires": []
    },
    {
        "id": "b648e25828861eeb",
        "type": "ui_table",
        "z": "abb42e8385d58ff0",
        "g": "7a07cae8132c3b0c",
        "group": "b8a2a840571acb58",
        "name": "",
        "order": 1,
        "width": "10",
        "height": "10",
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1010,
        "y": 140,
        "wires": []
    },
    {
        "id": "2303b9837118c1f0",
        "type": "inject",
        "z": "abb42e8385d58ff0",
        "g": "c8ccef992a04e384",
        "name": "Inject and update every 10 minutes",
        "props": [],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "561ea5b79df20677"
            ]
        ]
    },
    {
        "id": "561ea5b79df20677",
        "type": "http request",
        "z": "abb42e8385d58ff0",
        "g": "c8ccef992a04e384",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://thingspeak.com/channels/2624543/feeds.csv?api_keys=YA3LFQ0FBOO1RHIW",
        "tls": "",
        "persist": true,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 470,
        "y": 280,
        "wires": [
            [
                "e18881b9d8bd4e2e"
            ]
        ]
    },
    {
        "id": "e18881b9d8bd4e2e",
        "type": "json",
        "z": "abb42e8385d58ff0",
        "g": "c8ccef992a04e384",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 630,
        "y": 280,
        "wires": [
            [
                "9602f897bd2c179e"
            ]
        ]
    },
    {
        "id": "9602f897bd2c179e",
        "type": "function",
        "z": "abb42e8385d58ff0",
        "g": "c8ccef992a04e384",
        "name": "Parse string to array",
        "func": "function parseAndSortData(input) {\n    const result = [];\n    const lines = input.trim().split('\\n');\n\n    lines.forEach(line => {\n        if (!line) return;\n\n        const parts = line.split(',');\n        if (parts.length < 4) return; \n\n        const dateTime = parts[0].split(' ');\n        if (dateTime.length < 2) return;\n\n        let date = dateTime[0];\n        let time = dateTime[1];\n        const temp = parseFloat(parts[2]);\n        const pH = parseFloat(parts[3]);\n\n        let [year, month, day] = date.split('-').map(Number);\n        let [hours, minutes, seconds] = time.split(':').map(Number);\n        let currentDate = new Date(year, month - 1, day, hours, minutes, seconds);\n\n        let initialDate = currentDate.getDate();\n\n        currentDate.setHours(currentDate.getHours() + 7);\n\n        if (currentDate.getDate() !== initialDate) {\n            year = currentDate.getFullYear();\n            month = currentDate.getMonth() + 1; \n            day = currentDate.getDate();\n        }\n\n        let adjustedDate = `${year.toString().padStart(4, '0')}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n        let adjustedTime = currentDate.toTimeString().split(' ')[0];\n\n        result.push({date: adjustedDate, time: adjustedTime, temp, pH});\n    });\n\n    result.sort((a, b) => {\n        const dateA = new Date(`${a.date}T${a.time}`).getTime();\n        const dateB = new Date(`${b.date}T${b.time}`).getTime();\n        return dateB - dateA;\n    });\n    return result;\n}\n\nmsg.payload = parseAndSortData(msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 280,
        "wires": [
            [
                "104dfd424dd5b2b9"
            ]
        ]
    },
    {
        "id": "a22e0e6340938efd",
        "type": "comment",
        "z": "abb42e8385d58ff0",
        "g": "c8ccef992a04e384",
        "name": "Sensor's Data from thingspeak",
        "info": "",
        "x": 190,
        "y": 240,
        "wires": []
    },
    {
        "id": "104dfd424dd5b2b9",
        "type": "ui_table",
        "z": "abb42e8385d58ff0",
        "g": "c8ccef992a04e384",
        "group": "9c0742632baf9dde",
        "name": "",
        "order": 0,
        "width": "10",
        "height": "10",
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1010,
        "y": 280,
        "wires": []
    },
    {
        "id": "b8a2a840571acb58",
        "type": "ui_group",
        "name": "Feeding History",
        "tab": "29d168fc398d2b83",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9c0742632baf9dde",
        "type": "ui_group",
        "name": "Scheduling History",
        "tab": "29d168fc398d2b83",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "29d168fc398d2b83",
        "type": "ui_tab",
        "name": "History",
        "icon": "history",
        "disabled": false,
        "hidden": false
    }
]